#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.0 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 92 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 158 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 211 72 255 0 0 0 -1 -1 2
35 #"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 211 72 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 150 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 158 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 211 72 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 150 255 0
0 0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 0 211 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 32 #"widget.rkt::browser-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 59
#"macro-debugger/syntax-browser/properties color-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 72 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 190 190 190
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 107 142 35 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 100 149 237
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 70 130 180 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 47 79 79 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 139 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 75 0 130 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 160 32 240 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 250 128 114
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 184 134 11 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 128 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 169 169 169
0 0 0 -1 -1           0 2305 0 24 3 1 #"("
0 0 14 3 4 #"load"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"op-on-numbers.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"load"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"vector-rep.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"load"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"list.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"load"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"abstraction.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"load"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"io.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; four basic procedures of vector:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; vector? : SchemeVal -> Bool"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; Tests whether its argument is a vector."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; vector-length : Vector -> Int"
0 0 24 29 1 #"\n"
0 0 17 11 72
(
 #";; Takes a vector as its argument and returns the number of elements"
 #" in "
) 0 0 17 3 4 #"the "
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; vector."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; vector-ref : Vector -> SchemeVal"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; GIVEN: a vector vec and a nonnegative integer k"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";;        where k is less than the length of vec"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; RETURNS: the element in vec that has index k"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; vector-generator"
0 0 24 29 1 #"\n"
0 0 17 11 70
(
 #";; GIVEN: a procedure that takes an index as its argument and return"
 #"s "
) 0 0 17 3 9 #"the value"
0 0 24 29 1 #"\n"
0 0 17 11 64
#";;        to be associated with that index in the vector we are "
0 0 17 3 13 #"constructing."
0 0 24 29 1 #"\n"
0 0 17 11 70
(
 #";; RETURNS: a procedure that takes a vector's length for generating "
 #"a "
) 0 0 17 3 9 #"vector of"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";;          the size specified. "
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; EXAMPLE:"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; ((vector-generator gen-proc) size)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; view : Vector -> () "
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; Takes a vector vec and displays its external representation."
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; EXAMPLES:"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; (view vec) displays #(1 2 3 4)"
0 0 24 29 1 #"\n"
0 9         919 21           0 0           0 152 0 14 3 3 #"old"
0 0 24 3 1 #" "
0 0 14 3 7 #"version"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 4 #"view"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 4 #"this"
0 0 24 3 1 #" "
0 0 14 3 3 #"can"
0 0 24 3 1 #" "
0 0 14 3 4 #"only"
0 0 24 3 1 #" "
0 0 14 3 4 #"view"
0 0 24 3 1 #" "
0 0 14 3 8 #"vectors:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"view"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"vec"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 13 #"highest-index"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 13 #"highest-index"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"#()\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"newline"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"letrec"
0 0 24 3 3 #" (("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 7 #"display"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 13 #"highest-index"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"#(\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"newline"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; TESTS:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"view"
0 0 24 3 3 #" (("
0 0 14 3 16 #"vector-generator"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 21 3 1 #"6"
0 0 24 3 3 #")) "
0 0 17 3 17 #";; #(0 0 0 0 0 0)"
0           0 0 0 24 29 1 #"\n"
0 0 17 3 33 #";; generalized version see io.rkt"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; make-vector "
0 0 24 29 1 #"\n"
0 0 17 11 72
(
 #";; Builds a vector of a prescribed size (the first parameter) and fi"
 #"lls "
) 0 0 17 3 6 #"all of"
0 0 24 29 1 #"\n"
0 0 17 11 70
(
 #";; its elements with the same specified value. If a fill value is no"
 #"t "
) 0 0 17 3 10 #"given, all"
0 0 24 29 1 #"\n"
0 0 17 11 68
#";; of the elements of the vector are filled with something, say (), "
0 0 17 3 8 #"although"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; this fill value is not specified by Scheme."
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; vector-generator version"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; shoudn't be used when using scheme implementation of vector."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"make-vector"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 10 #"fill-value"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 15 #"singleton-list?"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 16 #"vector-generator"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 14 3 10 #"fill-value"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; list->vector"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; convert a list to a vector"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"list->vector"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"ls"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 16 #"vector-generator"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 3 #") ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; vector"
0 0 24 29 1 #"\n"
0 0 17 11 70
(
 #";; takes an arbitrary number of arguments and returns a vector havin"
 #"g "
) 0 0 17 3 5 #"those"
0 0 24 29 1 #"\n"
0 0 17 11 71
(
 #";; arguments as its elements. The length of the vector returned is t"
 #"he "
) 0 0 17 3 7 #"same as"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; the number of arguments."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"vector"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"list->vector"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; vector-stretch"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; GIVEN: a vector vec and a number new-size"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; RETURNS: extension of vec of length new-size (a new vector)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"vector-stretch"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"vec"
0 0 24 3 1 #" "
0 0 14 3 8 #"new-size"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"size"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 8 #"gen-proc"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 4 #"size"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 21 3 1 #"'"
0 0 24 3 6 #"()))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 16 #"vector-generator"
0 0 24 3 1 #" "
0 0 14 3 8 #"gen-proc"
0 0 24 3 2 #") "
0 0 14 3 8 #"new-size"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; vector-copy"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; GIVEN: the vector to be copied"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; RETURNS: the copied vector"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"vector-copy"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"vec"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 14 #"vector-stretch"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; vector-update"
0 0 24 29 1 #"\n"
0 0 17 11 66
#";; returns a copy of the vector vec with the element with index k "
0 0 17 3 11 #"replaced by"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; the value val."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"vector-update"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"vec"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 8 #"gen-proc"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 14 3 3 #"val"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 16 #"vector-generator"
0 0 24 3 1 #" "
0 0 14 3 8 #"gen-proc"
0 0 24 3 3 #") ("
0 0 14 3 13 #"vector-length"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; list->vector"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; convert from list to vector. (using vector-update)."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"list->vector"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"ls"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 3 #"vec"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-vector"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"letrec"
0 0 24 3 3 #" (("
0 0 14 3 7 #"convert"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ls*"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 3 #"ls*"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 14 3 1 #"v"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 5 #"new-v"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-update"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 11 1 #" "
0 0 14 3 3 #"ls*"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 7 #"convert"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"ls*"
0 0 24 3 2 #") "
0 0 14 3 5 #"new-v"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 7 #"convert"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; vector-map"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; apply the procedure proc to the corresponding elements of vec."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"vector-map"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"proc"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 16 #"vector-generator"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 3 #") ("
0 0 14 3 4 #"proc"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 13 #"vector-length"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; multiply-by-scalar"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; GIVEN: a scalar c and a numerical vector vec"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; RETURNS: a vector whose elements are products of c and element in"
 #" vec"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"multiply-by-scalar"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"vector-map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"elem"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 4 #"elem"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; vector-apply-elementwise-to-both"
0 0 24 29 1 #"\n"
0 0 17 11 72
(
 #";; analog to vector-map, for a binary procedure proc and two vectors"
 #" of "
) 0 0 17 3 8 #"the same"
0 0 24 29 1 #"\n"
0 0 17 11 71
(
 #";; length, which applies proc to the corresponding elements of the t"
 #"wo "
) 0 0 17 3 8 #"vectors."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 32 #"vector-apply-elementwise-to-both"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"proc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"vec1"
0 0 24 3 1 #" "
0 0 14 3 4 #"vec2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 8 #"gen-proc"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"proc"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 4 #"vec1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 4 #"vec2"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 16 #"vector-generator"
0 0 24 3 1 #" "
0 0 14 3 8 #"gen-proc"
0 0 24 3 3 #") ("
0 0 14 3 13 #"vector-length"
0 0 24 3 1 #" "
0 0 14 3 4 #"vec1"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";; vec+"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"vec+"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 32 #"vector-apply-elementwise-to-both"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";; vec*"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"vec*"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 32 #"vector-apply-elementwise-to-both"
0 0 24 3 1 #" "
0 0 14 3 1 #"*"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; vector-accumulate"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"vector-accumulate"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"proc"
0 0 24 3 1 #" "
0 0 14 3 4 #"seed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"vec"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"size"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"letrec"
0 0 24 3 3 #" (("
0 0 14 3 6 #"helper"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 4 #"size"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 14 3 4 #"seed"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 4 #"proc"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 3 #") ("
0 0 14 3 6 #"helper"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"helper"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; vector-sum"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; calculate the sum of elements in a vector vec."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"vector-sum"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 17 #"vector-accumulate"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; vector-product"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; calculate the product of elements in a vector vec."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"vector-product"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 17 #"vector-accumulate"
0 0 24 3 1 #" "
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; TESTS:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-sum"
0 0 24 3 2 #" ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 3 #")) "
0 0 21 3 2 #"25"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"vector-product"
0 0 24 3 2 #" ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 3 #")) "
0 0 21 3 3 #"945"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; dot-product"
0 0 24 29 1 #"\n"
0 9         655 21           0 0           0 97 0 14 3 3 #"The"
0 0 24 3 1 #" "
0 0 14 3 3 #"dot"
0 0 24 3 1 #" "
0 0 14 3 7 #"product"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 3 #"two"
0 0 24 3 1 #" "
0 0 14 3 7 #"vectors"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 2 #" ["
0 0 14 3 2 #"a1"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 2 #"a2"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 3 #"\342\200\246"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 2 #"an"
0 0 24 3 2 #"] "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"="
0 0 24 3 2 #" ["
0 0 14 3 2 #"b1"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 2 #"b2"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 3 #"\342\200\246"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 2 #"bn"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 15 3 7 #"defined"
0 0 24 3 1 #" "
0 0 14 3 3 #"as:"
0 0 24 29 1 #"\n"
0 2          33 21 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0          11 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\1M\0\0\0006\b"
 #"\6\0\0\0Cb\313r\0\0\24\223IDATx\234\355\235y|L\347\376"
 #"\307\3373YH\254I\204\204\264\241\224"
 #"\242B\322\"\252\212\324\225K\257%\226"
 #"\"\305\265\267\270E\225\237tS\305\275\304v-Eb\271Z\351\245$\304RW"
 #"J\324\236\212$\245!\261D$\266\bBBk\262\315\314\371\375q2IFf"
 #"\230\211IF\365y\277^yM\316s\316\363=\337g\346\231\317y\236\357\3679"
 #"g\24\222$I\b\4\2\201\300$\224\326v@ \20\b\376H\b\321\24\b\4"
 #"\0023\20\242)\20\b\4f DS \20\b\314@\210\246@ \20\230\201\255"
 #"\265\35\370\243\220\237\237\317\222%K\260"
 #"\267\267\247G\217\36\2348q\202\353\327"
 #"\257\23\24\24\204\275\275\275\265\335\23\b"
 #"\4\225\204\30i\232\310\216\35;\350\325"
 #"\253\27\237}\366\31\27.\\`\324\250"
 #"Q\304\305\305\221\230\230hm\327\4\2A%\"D\323D\272u\353Fnn."
 #"\235:u\"  \0\215VCll,\r\e6\264\266k\2\201\240\22\21\242"
 #"i\"...\34=z\24???\0bcc\361\366\366F\222$T\271*"
 #"+{'\20\b*\v!\232fp\344\310\21\336z\353-\0\216\369J\357\336"
 #"\275\t\t\t\301\316\326\316\312\236\t\4"
 #"\202\312B\210\246\31t\355\332\225\266m"
 #"\333\0020p\340@T*\25\357\16z\27;;!\232\2\301\237\5\205\270\367\\"
 #" \20\bLG\2144\5\2\201\300\f\304:\315\"\n\n\n\310\313\313C\222$"
 #"t\203o\t\t$\212\313\212\313\215\f"
 #"\316\25\n\205\336\266\223\263\0236J\233\212u\\ \20T*B4\213\b\r\r"
 #"e\322\244I\0\330\333\333\323\275{w\243\342("
 #"I\22\5\5\5\24\26\26\222\233\233\313\225+W"
) 500
(
 #"\270}\373v\231\343\267o\337N@@@\205\373.\20\b*\17\21\323,B\245"
 #"R\321\261cGN\237>\r\300\326\255[\318p\240\311\365sss9w\356"
 #"\34QQQl\332\264\211\244\244$\272t\351\302\301\203\a+\312e\201@`\5"
 #"\204h\226\"99\31ooo\n\n\nptt$11\221\306\215\e\233m"
 #"\247\260\260\220\305\213\27\363\371\347\237s"
 #"\362\344I|||*\300[\201@`\rD\"\250\24-Z\264`u\310j@"
 #"\36y\16\35:\224\374\374|\263\355\330\331\331\21\24\24DDD\4!!!\226"
 #"vS \20X\21\253\2174#\266\303\276\3\360\360!x\267\201iS\254\351\215"
 #"L`` \2337o\6 ((\210y\363\346\225\333\326\222%K\2308q\""
 #"U\252T\261\224{,Y\1\227R!W\5\e\326X\314\254\325\270\221\1\313\276"
 #"\206\273\367\240c\a\30\365wk{\364"
 #"\364\354\330\5\a\16\303\335,\2307\a"
 #"<_\264\266G\177\16\362\363a\316<"
 #"\270\223\5\365\352\302\354\231\226?\207\325"
 #"G\232u\352\300\265\353\20\261\21~}F\236}\261r\345J\0325j\4@p"
 #"p0?\376\370c\271mM\235:\325\242\202\t\320\321\27bb\340\372\r\213\232"
 #"\265\32\325\253\203\2177|\267\6l\236\223\305\6-\232CN6\354\332\nu]"
 #"\255\355\315\237\a\e\e\360\353\n[\267"
 #"\300\357\277W\3149\254.\232]\336\202\301\246\347[*\5'''6m\332\204"
 #"\215\215\r\222$1t\350P222\254\355V1\355\333\312#\230.\235\255\355"
 #"\211e\250U\23\352\273\313\377\373\266\263"
 #"\274\375\37~\370\201\363\27\316[\336\360ch\3722(\225\320\251;88X\336"
 #"\376\302\205\v-o\324\202\24\24\24\260t\351\322J?\257\255-"
 #"\264j\t\252{\360f\307\2129\207\325E\23\200\242\345\215\217,s"
) 500
(
 #"\264*\276\276\276\4\a\a\3\220\225\225\305\2301cPk4V\366J&\3652"
 #"\334N\227G\234\317\v'\342\300\325\23^nby\3337o\336$\373^\266\345"
 #"\r?\6I\202\237~\202\316oU\214\375_\177\375\265b\f[\b\265FMr"
 #"r\262U\316\35\377\v \201o\373\212\261o\236h\346\252 z?,]\6\37"
 #"\177\f\353\327C|<h\237NLt\3255\32H>\17\e7\301\334\371\20\265"
 #"\37\262s\236\312\364S1\345\243)\274"
 #"\363\316;\0\354\335\273\227e\25q\345"
 #"\274s\a\"\267\303\205\363\240V\313A"
 #"\231'\20\23\v\366\16\340^\17\276\17"
 #"\207\304\263\362\227\324\352\244\246BD\4"
 #"\334\276\r*\25h\265&W=x\b\272u\203\204S\260u\e\334\272m9\267"
 #"\264Zm\231\e\17L\242\260\20\216\34"
 #"\221\373|a\241\34x7\221\224K\362\205\255UK9\276y\370(\24\24\230\357"
 #"\2021\264f\274\267\326@\322>E\207|\212~\4p\364\30\274\362\32<x\0"
 #"\233\267BjZ\371]1\204y\2429{\16\364\350\16\2317\241wo8\31\a"
 #"\35\332\302\324\217-\362\255\215\b\203ISA\322\202\2133\f\377;4j\2)"
 #"\251\306\353\344\344\344p\366\354Y\223\376"
 #"\256]\273f\226?6J\e\326\256]\213\253\253\34\224\2321c\6'O\236|"
 #"\232&\226\240\321\300\277\227\312\215\254V"
 #"\35\202\27B\253V`\302\264\353\320a"
 #"\371u\375F\250\343\2\303FB\310Z"
 #"\363N\237\237\237o\362\373\226\222\222\362xc9\3310v\34,Z\fN\265a"
 #"\330ph\362\22\0342m\215\252J\5"
 #"G\367\311#\263\224K\220\235\r\255\332"
 #"\300\225\253\346\265\311\30\345\312u\2368"
 #"\1~~p\351\22\334\314\4\37\37"
 #"x\265\245\311\325\217\305\310\257\337\206\201\2633,["
 #"\t\243\3367\337\215?*\345z\317s\262a\314XX"
) 500
(
 #"\274\344\221~t\310,3\373\242\341j"
 #":\354\375\21\252V\201N]\340\247\303"
 #"\346\273c\f\363\356\b\272Q\224yh\331\2:w\206v\355\340\333u\260r\31"
 #"\214\e\a-Z\30\254\226\231\231I\235"
 #":u\260\265}\374\351\332u\201\350\377"
 #"\225l\347\346\303'\223\341\377>\205\310"
 #"-\206\353\\\271r\205}\373\366\31\334"
 #"\247\e](\24\n\24\n\5\215\0325\342\205\27^x\254\17\217\342\356\356NX"
 #"X\30=z\364@\243\321\20\30\30H||<\265k\3276\313N\31V\255\202"
 #"\371\377\202\v\27\240\266\0234k\nM"
 #"\32\301+\257\350\35\226\236\236N\315\2325qvv\6\344\213\356\276}0z\2"
 #",\370\247|\314\ac\341\337\313a\3748y\373\316\235;\250T*<==\215"
 #"\236>;;\233\275{\367\32\335\257{"
 #"\317\24\n\5\16\16\16\274\374\362\313\306"
 #"\3332\366}\310\313\205\335\273\213\34\270"
 #"\v\303\6C\323fz\207\335\271s\207\334\334\\^|Q?\225\34\227\0\205\371"
 #"\2609\f:\276!\227}\373\35l\332\2\237L/\3627'\233\354{\331\274\364"
 #"\322K\306\375\260\24ii\320\335\17\276"
 #"\371\16\372\365\223\3136n\204\352%\261"
 #"\3\265F\303\231\304D\262\262\262x\275"
 #"\355\3538\325v\3223q\370(\264y"
 #"\3\276\333\0\366\366r\262\253\203\17\314"
 #"\377'\324w\323\222x&\221[\231\267h\333\266m\361g[\221\2505\32ne"
 #"f\322\240A\3\203\373\263\262\262pt"
 #"t\304\321\321\321\340\376\253W\257\226\371"
 #"\334\36\207\331#{I\222\373Q~\36"
 #"\354\332%\227\335\311\202aC\240Y\263"
 #"\307\327-\305\355;p&\26\226\207\302\373c\344\262\3G t-\370Y(\a"
 #"`\236h\256Y#O\313\221`\353V\270x\261$\20\371\340\201\301*\227"
 #".]\242Y\263f\214\e7\216\325\253W?\336\231G\274iV\364=\375_"
) 500
(
 #"\204<Mw2\240S\255[\267\246u\353\326f5\303\\\374\375\375\2311c\6"
 #"\363\347\317'55\225\240\240\240\247["
 #"\177\231\225\5\237\376\37L\234,\v&"
 #"\300\371\v\362k;\375L\310\202\5\v\30:l(ot\220\325\344R\252<\355"
 #"\v\350]r\314\245T\270v^\356w\n\5|\373\355\2674h\320\340\261\242\351"
 #"\346\346\306\364\351\323\313\337\6\35\a\242aG8l\337UR\226\234$O\21<"
 #"<\0\270x\361\"\353\326\255c\333\266m,Z\264\250\314\227/\346\4\324m\b"
 #"\35\212b\264Z-\234K\2//\371\242\270r\345Jv\357\336MPP\320\23"
 #"E3<<\234\244\244$\275/\355\311\223'IHH\320[\5!I\22\335\273"
 #"w\347\2157\336(kd\346L\250\342\0}\373\249\244\201_\342\341\363/\213"
 #"\17\231\367\257\177\341\353\353Krr2"
 #"\203\a\17\346\330\261c4o\336\274\330\377}\373`\312\24Y0\1._\226_"
 #"32\340\277a\v\361\362\362\"--\215\300\300@\16\374t\2006\255\333\30l"
 #"\217*W\305\302\5\v\221$I\257M\211\211\211|\365\325Wz\355Q(\24L"
 #"\2336\215j\325\252\225\2613}\3324\226-[FRRR\261\237\305\347P\251"
 #"h\330\260!m\333\2665x\a\333\346\315\233\t\f\f$,,\214\241C\207\226"
 #"\331\177\371\362e6n\334\250\347\237Z"
 #"\255&..\256\214\217\316\316\316\305\267"
 #"+\353\241\353G\221\273K\312\222\222\340"
 #"\245\246`D\350\r\21\e\aH\320\373o%e\27/\300\275{&\233x\"\346"
 #"\211\346\177\377\v\223&@\235z\320\257"
 #"\277\34\345\266\265\225cq\222\341\270\203"
 #"\233\233\e\3\a\16\244[\267nf;\247\324\5\17$Y\223\r\211fe1k"
 #"\326,\16\37>Lll,}\372\364y:c\a\16@^\36\274\371fIYL\f4y"
) 500
(
 #"\5\36\21\224U\253V\351m\377rZ~\313_\363.);\36#\307pt}"
 #"v\332\264iO\347\2379D\356\224O\354[*+u\360 t\377k\361f\323"
 #"\246MY\260`\201\321i\376\317\261\360"
 #"\366\333%\237\367\305\24P\335\2253\320"
 #"\236\236\236,X\260\200\333\267M\vr"
 #"v\351\322\205\327^{M\257\314\326\326"
 #"\226\346\315\233\323\246\215\2760\351\302."
 #"z\344\345\301\266-\0200\20t\17[9w\36\36\344\24\247c\363\363\363\231;"
 #"w.\307\216\35c\362\344\311$$$\260j\325*V\254X\1@\372\25\270w"
 #"\35:\224\272\376\305%\310oSCO-\263g\317&**\212\t\23&p\346"
 #"\314\31V,_\301\372\365\353\r\266\307"
 #"\321\301\221\341\303\207\353Mw\25\n\5\247N\2352XnH0A~\26\354\215"
 #"\e7psw+\263\257j\325\252\f\e6\214W\36\231\345\350\360\362\362\242o"
 #"\337\276F\a'\36\36\36\f\37>\\\257,//\217\224\224\2242>\32]~"
 #"g\264\37\371\e>\336\b\361\t\320\244"
 #"5\350\232\231\237\17\261\307\240\357\0\263"
 #"\314<\26\323E\363\324)\370`\214\274"
 #"\20*\372\0\350\246k\272\236n$\204Q\275zu\276\377\376\373r9w\277h"
 #"\360\352T\37\32\3247|\314\341\303\207"
 #"\t\r\r5\311\336\353\257\277\316\324\251"
 #"S\313\345\213Z\255F\251T\262f\315\32z\364\350Q.\e\305d\334\224;H"
 #"\207\16%e\a\16\300\333\335\340\376}\370\345\27r}}Y\273v-..."
 #"\274\367\336{\305\207]\273\16M\275\345"
 #"\351\36\300\325\353p*\6\226\205\310W"
 #"\362\215\e7r\357\336=>\372\350\243\307\272\220~%\235O?\371\324$w\235"
 #"\235\235\371\372\353\257\r\357\274~\r"
 #"Zy\203N\200\356\337\207\270\237a\342?\340\314\31"
 #"\331\321\2425\257\306\270|\31\272\214(\331\216\332/'"
) 500
(
 #"\272\336\355g\222{z\270\272\272\226\21"
 #"C\27\27\27\352\327\257o\332\324\376\366"
 #"m9\351\323\271\324\\.&\6\252V\205\326\255a\347\16\252\364\351KDD\4"
 #"\315\212\246\2155k\326\324\eee\334"
 #"\224_[\24\r\350\264Z\330\276\23\6"
 #"\f\207\272\256J\302\303\303y\265\325\253"
 #"\0\324\250Q\203{O\30\00652\360\3769::\32,7F\357\336\275\351\335"
 #"\273\267\301}J\245\362\261\263\300\226-"
 #"[\22\31\31it\277\275\275}\231\367"
 #"\366\341\303\207\324\254Y\323t\37\257_"
 #"\3/\37y\3416@N\16\304\237\200\17?\204\304D\250Q\203\270\254,\366\354"
 #"\331C`` )))\234={\26\177\177\177\275\213\341\325k\360z\251k\346"
 #"\261\237!\357\1\374}\30d\336\312$du\b~~~\330\332\331\22\37\27\217"
 #"\247\247\247\331\203 \323E\263t`W"
 #"w5\213\336\17\271\271\362\3777n\310"
 #"\275CY\376UL\27\316\313W\351\206"
 #"\236\240\326\300\332\242\213\357\3349e\247"
 #"\356::w\356L\347\316\26\nV\30A\255\3210z\364h\272v\355\312\350\321"
 #"\243\237\336`\363Wd\321\324)\337\341"
 #"\303\262\320\214\e+\307\5k\327&$$\204~\375\372\321\265kW=\321|\271"
 #"\261~2q\341\277\301\247\243|\27M"
 #"xx8\355\333\267\307\337\337\237Q\243FQ\253V-\243.4\364l\310\246M"
 #"\233\236\276-^^\372\253\210CC\345$\227\2177,[\0163\277x\242\211W"
 #"[\202.\331z/\e\226.\207\331\363\301\303\364Y\231\345pw\agW\250Q"
 #"C\336~\360\0V\257\206\366\35A\365"
 #"\20v\357\201>}\351\325\253\27\0w\357\336e\327\256]zq\365\206\r\1E"
 #"\311\347\264u\e\334\311\224\357\f\2\350\331\263' '1\303\303\303\331"
 #"\271sg%5\356\31\306\313K\316\b\352(\356G>r\302\364\313\231\354"
) 500
(
 #"\334\271\23'''\6\17\36Ldd$\316\316\316\314\236=\233\355\333\267\27W"
 #"k\332\24t+\235\324\32\230\277\20\206"
 #"\214\226\343\231\363\346m\240S\247N\364"
 #"\355\333\227m\333\2661a\342Dj\325\254\311C3VE\2009\242\351\343\3\301"
 #"K`\301|\371\v\361j+y(\35\272\16>\236\n\201\357\302\227s\340\363\317"
 #"\315r\0d\375\250Q\27\326\204\300\274"
 #"\205\362\350)\351\fx\373\300\17\373\241"
 #"\233\237\331&-J\320\214\31T\255Z"
 #"\225Y_\315\262\214\301\277\374\5\372\17"
 #"\202\177|\b5k\200\233\e\364\354\r"
 #"\373\243\301\276\n\254\t\245\277\227\27\207"
 #"\16\35*3:\350\371W\b]\17\237})\337\21\324\320\23vm\227cg\276"
 #"\276\276\334\274y\223\306\215\e?V0-\312\a\37\300\336\2750g\216<\fn"
 #"\337\16^h$/Gs\253\a\365\352\25\37\252P(\ffUg|\fc'"
 #"\310Q\236\23\261\20<\17\372\367\325?\306X]\213cg\a+\276\206\245K!"
 #"=]\36\272\2747\24BV\301\214O`rI<N\255V3}\372t\302\303"
 #"\303\365\246\266\36\365!h\26L\372X\376\377\376op\"\6^\360(9\215F"
 #"\253a\306\214\31l\334\270\21//\257"
 #"\212o\327\263\316\370\361\20\25e\270\37"
 #"\325wG\353\352\312\204\t\23\230<y"
 #"2\v\27.\304\323\323\223\203\a\17\226"
 #"\3715\330Q\303\341o\1\262\216$\234"
 #"\202^\357\300\230\21\362\276\341\303\207\23"
 #"\31\31\311\224)S\350\332\265+\27/"
 #"^,\327\3y\220\314E\243\226\244\353\327%)/\257T\231F\222\36<\220\367"
 #"\225\203\202\2I\312\315-\331\316\316\221"
 #"\244\273\367\312e\312\342,_\276\\\352"
 #"\326\255\233\244R\251,o\374J\272$\335+j\250F#I\27.H\222"
 #"\352a\361\356.]\272HqqqRff\246^5\215F\222.\246\310"
) 500
(
 #"o\371\243|\370\341\207RXXX\231:\25\212Z-I\27/\226|\210yy"
 #"\222t\356\234$i\265z\207\5\4\4H\21\21\21\6M<TI\322\371\363\222"
 #"\244\326\30>\305\210\21#\244\377l\370"
 #"O\271\334[\275z\265\24\23\23c^\245\234\34IJK+\331\276uK\356\367"
 #"Eh\265Zi\316\2349Rrr\262$I\222\264c\307\2162&\256\335\220\244"
 #"\214\233\206\315\317\237?_:}\372\264"
 #"\321\272Ob\360\340\301f\327\251L~\373\3557i\354\330\261\346UzB?*"
 #",,\224\234\234\234\244\aE\35? "
 #" @\332\37\275_\272u\353\226\236\231"
 #"\302B\271/\225\326\24\35\375\373\367\227"
 #"\242\243\243%I\222\244\245K\227J\263"
 #"f\315*S\377I\230?\227V\332\310"
 #"\331\254\322\1]\245R\236\316\224\363)\345vvr\310HG\355Z\340\354d\374"
 #"\370\312\"rG$\353\326\255c\353\326\2558T\304\275p/z\202SQC\225"
 #"Jyn\341 /\371\310\314\314$##\203\352\325\253s\374\370q\275jJ\245"
 #"|\347\214n\6Y\232\360\360p:w\356Lxx\270\345\3755\206\215\215\34\343"
 #"\326}\210U\252\310K\247\36YvRXX\210Z\2556h\302\321A^Yb"
 #"c\244G\252\325j4\352\362\335D\341"
 #"\347\347g4\311a\224Z\265\212\346\331"
 #"E\324\255\253\227\305\235;w.W\256\\!22\222/\276\370\202\370\370\3702"
 #"&<\352\227$$J\263x\361b\316\235;\307\236={\2309s&111"
 #"\346\371\6O\214Y[\e\aG\a\336"
 #"\177\337\314\205\251O\350Gg\223\316\342"
 #"\345\345E\215\0325(((\340\320\241"
 #"C4i\322\204]\273v\351\231\261\265\225\373RiM\19\314v\360\340A\332"
 #"\25\255P\211\212\212\302\337\337\2375k\314{\352"
 #"\215\315\254Y\263f\231\327\262?\a1?\3070\376"
) 500
(
 #"\203\361DEE\341\346f\240\347\233\310"
 #"\370\361\343\361{\333\317\354_\254\254\352"
 #"\340\300\203\373\367),,d\300\200\1&\257{spp --\215\221#G"
 #">q]leq\365\352U\26-Z\204\213\213\v\231\231\231\234={\26__"
 #"\323\356\1\275u\353\26\301\301\301T\253"
 #"V\215\273w\357\222\220\220\300\233\245W"
 #"\35\230\200\213\213\213E/z\252\\\25"
 #"{~\330\203\275\275=*\225\212\202\202"
 #"\2z\365\352e\322:F\265Z\315\366\355\333\251Z\265jq\335\236={\232\225"
 #"\324\1\214\256\267|VP*\224\324\257o${[N\322\322\322\360\366\366\246i"
 #"\323\246\330\330\330`ggGFF\6#F\214@iB.\345\376\375\37388"
 #"8\340\347'\307\373j\327\256M||<\243F\215\242\272.\277`\2V\1774"
 #"\334\263\310\205\213\27\350\361\327\36DF"
 #"F>\325\32\320-[\266\20\25\25\305\206\r\e,\350\235@ \260&\317\306\3"
 #";\236!2oe\322\267O_\326\256][n\301T\253\325\4\a\a\23\30\30"
 #"\310{C\337{r\5\201@\360\207A"
 #"\2144K\361\373\357\277\343\357\357\317\204"
 #"\t\23\364\226\371<\211\234\234\34n\334"
 #"\270Azz:\321\321\321l\331\262\205\2337o\342\341\341AZz:\266\317\313"
 #"C\"\5\2\201\3705J\35j\265\232\221#Gr\342\304\t._\276\314\364\351"
 #"\323Q(\24(\225J\275{\330mll\320h4\344\347\347\223\227\227W\374j"
 #"\210\321\243G\v\301\24\b\2363\204h\26\21\23\23C\255Z\265\0301bD\231"
 #"\3379\327j\265e\312J'fJ\213*P\34\224\0366lXe6A \20"
 #"T\2bz.\20\b\4f \22A\2\201@`\6B4\215\220\232\232\312\325"
 #"\253\346?\0057))\351\211\17`\20\b\4\177"
 #"\\\204h\32!,,\214\324\324\307<2\376\21"
) 324
(
 #"b~\216a\372\364\351\264k\327\216\e7\236\223\237\211\24\b\4e\0201M\v"
 #"\323\270qcv\354\330A\253V\255\254"
 #"\355\212@ \250\0D\366\374\21\362\363"
 #"\363\t\r\rE\253\3252e\312\24k\273#\20\b\2361\204h>\302\272u\353"
 #"\350\327\257\37>>>L\2324\211\302"
 #"\302BV\256\\Y\3468\335\357\347\270\273\2733h\320 \275}b\360.\20<"
 #"\277\b\321|\204\1\3\6p\374\370qz\365\352\205R\251\244J\225*f?\355"
 #"]\210\246@\360\374\"D\363\21\352\325"
 #"\253\3077\337|\303\324\251S\271v\355"
 #"\32u\353\32658\322\324\341\356\356\316\220!C*\321C\201@`M\204h>"
 #"\202J\245\">>\36\17\17\17\216\35;\306\220!CL\32ij\265Z\n\n"
 #"\n(,,\344\267\337~C\255\321\210[(\5\202\347\20\221=7\300\212\25+"
 #"puue\320\240A&?\307\362\364\351\323\354\336\275\e[[[4\32\rM"
 #"\2324a\360\340\301\25\354\251@ \250"
 #"l\204h\n\4\2\201\31\210\305\355\2\201@`\6B4\5\2\201\300\f\204h"
 #"\n\4\2\201\31\374?2\215\21d=\275\235C\0\0\0\0IEND\256B`\202"
) 0 0 24 29 1 #"\n"
0 0 14 3 3 #"For"
0 0 24 3 1 #" "
0 0 14 3 8 #"instance"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 1 #" "
0 0 14 3 17 #"three-dimensional"
0 0 24 3 1 #" "
0 0 14 3 5 #"space"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 3 #"dot"
0 0 24 3 1 #" "
0 0 14 3 7 #"product"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 7 #"vectors"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"["
0 0 21 3 1 #"1"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 4 #"\342\210\2225"
0 0 24 3 2 #"] "
0 0 14 3 3 #"and"
0 0 24 3 2 #" ["
0 0 21 3 1 #"4"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 4 #"\342\210\2222"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 4 #"\342\210\2221"
0 0 24 3 2 #"] "
0 0 14 3 3 #"is:"
0 0 24 29 1 #"\n"
0 2          41 21 1 #"\0"
2 -1.0 -1.0 0.0 0.0 0          15 500
(
 #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\1\247\0\0\0O\b"
 #"\6\0\0\0O\217\n\303\0\0\e,IDATx\234\355\335y\\T\345\376"
 #"\300\361\3170\4\250)\256\240\242\266\271"
 #"f\251m\346\222\v\241\246e\331-\265\4\313\4\25\263r)+M3\363f\251"
 #"\327\\\322\274\342\232\211e\3276[\314"
 #"~j\32\n.\225\211\336\256\v\t\250\201k \"\2\303\f\317\357\217\343\b\3"
 #"\303\314\31\231\201\311\276\357\327\213\27\314"
 #"Y\236\347\231\3039\347{\236\345\234cPJ)\204\20B\b/\342S\331\5\20"
 #"B\b!J\222\340$\204\20\302\353Hp\22B\b\341u$8\t!\204\360:"
 #"\22\234\204\20Bx\35\tNB\b!\274\216\4'!\204\20^G\202\223\20B"
 #"\b\257#\301I\b!\204\327\221\340$"
 #"\204\20\302\353\270\24\234\236~\372i\""
 #"\"\"\330\274e\263\247\312S\251~\370"
 #"\341\a\302\303\303\t\17\17/wZ\21\21\21DDD\260u\353V7\224\354\332"
 #"\260/q\37\341\341\341\364\351\323\a\263"
 #"\331\\\241y\233L&\336x\343\215\n"
 #"\317\327\25\333\266m\343\313/\277\254\224\274\337}\367]N\235:U)y{J"
 #"VV\226\366?\267X*<\357\204\235\t\225\366\277\3646K\226,\341\267\337~"
 #"sy=\227\202\223R\2125k\326\320#\254G\351\231{\367\272\2349\0\31\31"
 #"\360\303\26\210\213\203\274\274\253K\303\25"
 #"G\16\303\205\vE\237/]\202C\207"
 #"\0\270\377\376\373\371\350\243\2170\32\215"
 #"\345\316\306\307\307\2075k\326\20\32\32jw~\354Z8}\246\334\3318\225u"
 #"\1\266\305\301\276D\310\317\367|~\305"
 #"\355\335g\373\271]\333v|\364\321G"
 #"4l\330\220\212~\244\343\363\317?O\367\356\335\361\365\365-=\363\310"
 #"am?\250`\277\356\203\37\267\27}\356\332\265+\313\227/g\373\366"
) 500
(
 #"\355e\257\344\1\357\277\377>~~~\324\257_\277hb\241E;.\276\371\6"
 #"~\377\275B\313\343\252\243\311\260i\v"
 #"\234H\263\235\36\30\30HHH\b\257"
 #"O\236\\\241\3459t\370\0203\336\231\301C\17=T\276\204\16\36\264\335//"
 #"\\\200#G\312\227\246\207\225<\346\1"
 #"\372\367\357Odd$\351\351\351.\245\345rp\262\361\323O\260l\31<\362\b"
 #"\364{\304\245\214\1\370\364Sx\3569HK\207\217\327B\313\26Z\232\2364{"
 #"\16\4\327\201\226-\265\237\240\332p\25"
 #"Q\335\31G'\337\204\2350,\2\316\375\351\366lm|\261\36\302\207h'\300"
 #"\250g\241\331\255\260#\301\263y\356\377"
 #"/|\260\32\236|\32\272\264\367l^z\255_\277\36\223\311d{\241\220\234\f"
 #"\37\177\f\317\216\202;\332\300\37'*\264L\27/j\333h\347\236\242i>>"
 #">\314~w6\203\a\17\346\374\371\363\25R\216#G\216\260b\305\n\236}\366"
 #"\331\242\211\271\227`P8|\361\5\234;\v}\373\302\260\21PPP!e\322"
 #"+?\37\6\17\205\205\377\206/\276\206"
 #"\266w\302\240\247\265mk\0255,\212"
 #"\315\2337\263i\363\246\n)\223\245\320"
 #"\302\260\250aL\373\3474\256\273\356\272"
 #"\362%6i2\324\253\5\255o\205\346\315\240Q\38~\314=\5u\243}\373"
 #"a\345\20700\2B\273\227\236_\273vm\306\214\31\303\310\221#]J\267|"
 #"}N\a\377\a\1\1P\255\232\353\353\232\315\360l44k\6O=\5\357/"
 #"\200\354\v0fL\271\212\344\224Rpw\ah\324\b\36\177\34v\354\322~W"
 #"\220K\227\340\271\261Z1<)#\23^\177\23\226/\2067&\301/\t\320\250"
 #"1\364\37\b\347\263<\227\357\241\303`0@\315\232\236\377\216z\24"
 #"\26\0262y\362d^}\365U\333\31\307\216iW\242M\32\203\311"
) 500
(
 #"T\341\345z{\26\2348Xzz\213\346-\350\325\253\27K\226,q9\315)"
 #"S\246\270\274\316\214\0313x\345\225W"
 #"lk\224\353\326\301\216\355\320\257\37<3\24&M\202UK\341\353\257]N\337"
 #"\223\226\177\0\215B`\316,X4\0176~\v\237\307\302;\377*Z\306\350c"
 #"d\312\224)L\236\344z\355i\366\354"
 #"\331\\(\336\312\242\303\306\3576\322\260"
 #"aC\332\265m\347r~\245\250B\270\26734j\242],\354\371\5z\364,"
 #"\177\272nv\3500\370\30\241F\r\255\310\366\f|\342\t\16\36<H\\\\\234"
 #"\356t\313\27\234\236\36\2\203\aC\361"
 #"\346\0\275,\26\250v=\354\337\177\271$F\250]\aR\223\313U$]\326\254"
 #"\201\315\233a\372th\347\206\235\310\5"
 #"3fC\370 \317\347\263\377\0$\355\203\267f\26M\e\364\4d\246\303\266\37"
 #"=\227\357\300\307a\310`\270\241\261\347"
 #"\362pE||<\0\255Z\265\262\235\21\32\n\321\321pk+;k\331w\376"
 #"\374y\216\35+\373\312\365\210\316&\227"
 #"]{\300\337\37\2j\333\237?d\310\20V\256\\\251\273\\V))).-"
 #"\177\366\354Y\326\256]K\357\336\275m"
 #"g\370\371\303\331Sp\372\264\366\271fM\355wZ\211v\263b\n\v\v\35\366"
 #"+\374\376\373\357no\312\335\221\0s"
 #"\337\206\304\3\332\347\366wC\343\226\260"
 #"\242\304\246\353\323\247\17\307\216\35\343\340"
 #"A;W\3\16\244\247\247S\340bmq\351\322\245<\366\330c.\255\343\320\372"
 #"\365\360\375Fx\363M\255\245\307\211C"
 #"\207\17\225Y\346K\271\227\370\343\217?"
 #"\334W\266\313\236\34\0C\"\264\v\205"
 #"\262\370\32\215DGG\363\311'\237\350"
 #"N\327=\243\365\f\6\327\327\361\367"
 #"\327B\356\247\237j\237\217\37\203\343)\360\324\20\267\24"
 #"\251L\326\3$+\v\316gz6\257\22~\371U\213"
) 500
(
 #"\311\35\356\361|^\367\334\5c'B\304\23E\323\252U\325~\373\ax>\177"
 #"\256b\227\360\204\355\333\267\323\255[\267"
 #"\262\27pa\3375\32\215\214\35;\226"
 #"\244\244\244R\363\26-Z\304\267\337~"
 #"\3534\215\334\\\230=\17^y\261\354e:t\354\310\211\23'\34\6B{\\"
 #"=\371\357\336\275\2336m\332\20\30\30"
 #"h;\343\311'\341\317,-\200\3\304\307\203\321\b\16\372P|||X\260`"
 #"\1\2336\225n>\333\266m\e3f\314p{pz.\32\306\275\246\265xY"
 #"]\177=T\251b\273\234\257\257/\375"
 #"\372\365s\351\252\35\264\200kpa\377"
 #"0\231Ll\334\270\221\366\355\335\324\236"
 #"m\335^\31\31\266\375\344\16d\374\231"
 #"\301\310\221#1\225h\r\310\311\311!rh$\31\31\31\356)\233\35\3166U"
 #"\317\236=\331\260a\203\356\364\354\364\16"
 #"W\240\200\08s\6v&\300\2247\340\205q0u\252g\363\364\361\201\327^"
 #"\323\376\276\316\17\0326\200\227_.\272"
 #":\364\20\223\tf\316\206\17\226jA"
 #"\312\323\252U\203\231\323m\247\375\260\r"
 #"\252\325\203\16^\322\27T\226\234\234\34"
 #"\22\367'\352Z\266V\315Z\245kE"
 #"\305\354\335\273\227\256]\273\272\245\\\325"
 #"\253W'&&\206\310\310H\346\316\235K\263f\332Yq\361\342\305dee1"
 #"q\342D\247i\314Y\0/\276P\372"
 #"\4Z\234\257\321H\373\366\355\371\357\177"
 #"\377\313\r7\334\340\226\262\333\223\230\230"
 #"\310\255\267\336j\177f\365\352\360\313/"
 #"\260a\203\326\314\367\375\26\270\371f\207"
 #"\351-X\260\200\21#F\0\332\211\b ..\216U\253V\21\23\23\203\217\217"
 #"{\357\\\351\334I\373\261\372#\r\16"
 #"\357\205\347\306\227^\266M\2336\354uq\320\226\253\3014))\t\263\331L"
 #"\223&M\\Z\257L>F\30}\271\233\243\300\4\255Zi\335\36\327__"
) 500
(
 #"\346*\235:u\"''\207\21#F\260d\311\22\374\374\374\270t\351\22QQ"
 #"Q\214\37?\2366m\332\270\247lW\241U\253V\34?~\2343g\316\20\24"
 #"\24\344t\371\312\rN\240]\25\234=\a\267\335\246u\206de9>r\313\253"
 #"YS\355\212\360\356\273\265\317O>\251"
 #"\365y\271\320\236~\372\364i\24\212\372"
 #"\301\372\2333\347\275\17\243FB\325\252"
 #"\225\323\27\363\313\257\360\331jX\363)"
 #"\324\362l\34\276\342j\277gvv6\a\366\37(5\335z\25k0\30\256\374"
 #"\4\5\59\fNiiiN\16\4\203K\205\r\n\nb\305\212\25DFF"
 #"2\177\376|\266n\335\312\271s\347\230"
 #"\254cD\330\201\337 \353<t\352\250/\237\23'<;H\343\324\251S\216\267"
 #"MJ\212\326\364\336\240\1\34?\3564"
 #"\275\353\256\273\216\230\230\30\242\242\2420"
 #"\32\215\370\373\373\263t\351R\226/_"
 #"\216\237\237\237\eKn\337\364Yp\323m0\331\3165B\235:uHNv\255"
 #"\313\300\272\217\351u\346\314\31\202\203\203"
 #"\355\217\b\275\32\267\265\206\210phq"
 #"\2719\257G\17m\264\336\252U\16W\353\331\263'J)\242\243\243\231?\177>"
 #"\321\321\321\274\370\342\213\334m=\347U\22???\2\3\3u\34\223\32\367\5"
 #"\247\253=\23YG\315=\363\f\264o\2575\35\304\305\351\ed1w\36\244\351"
 #"hC\215\276<\360\2\264ZRq]\273\302\230\347\340\300\1\270\375v]E\266"
 #"V\333\3656\273\34>\2'OB\367.\332\347\253\331T\213b YG\227B"
 #"\324Ph\325\302vZF&\f\211\202\25\37\301c\217\352\317s\371\ap\360\220"
 #"\363\345\6\17\202vmKO\277\332]\242~\375\372DGG_\335\312%\2349"
 #"s\206\200\0\35\355\230.\2245((\210e\313"
 #"\227\321\247w\37\272u\353\306\274y\363\234\256c"
) 500
(
 #"6\303\3333a\311\"}yX,\26\262\263\263\355\316\313\312\312b\332\264i\0"
 #"6'\317\237~\372\211\361\343\213\252\rJ)\252W\257\316\3242Z#222"
 #"\250W\257^\331\205\350\337_\373}\353"
 #"\255\360po\255\372\37\25\345\260\334~"
 #"~~,[\266\214\307\37\177\34\245\24"
 #"\237}\366\231\256\300t\3524\314\236\353"
 #"t1\2\3\341u;\301\347?\237\301\356=\260i\3\324\f,=\337b\2618"
 #"\34\334\260p\341BRRRl\266\347"
 #"\217?\376\310\353\257\277n\263\377(\245"
 #"x\376\371\347\271\351\246\233J\245\221\231"
 #"\231\311\365e\325j\246O\207L\35\335"
 #"\b\343\306A\310\345\316\233\313\377\343+"
 #"\272w\2077_\207\267\336\202\306\216;"
 #"u{\365\352\305\305\213\27\271\345\226["
 #"\370\374\363\317u75.[\251\365\266838\34\332\331\253\20499\216\314f"
 #"3\27\213\17\247t\240\362\202S\241E;k\267h\256U_}}\341\201\a`"
 #"\366\f\370\376{\320\323\251\370\314\20}"
 #"7\357\324\255\253\375\316\314\2049s "
 #"2\22\254;W\365\352\332\357\337\223t"
 #"\a\247Q\243F\351Z\316j\372L\255"
 #"\311\376\345\211Z\273\354\361\313\361\364\335"
 #"y\320\251\3\f\e\352<\215AO\350\373\252uJt\262\347\346\302\320\0210{"
 #"&\364\356\t\331\331\220o\202\272u\234"
 #"\247\365\370?\364\335zV\273V\331\363\224\272\272.Iw*,,c\bQ9"
 #"|\265\376+z\366\354\311\241C\207HMM\345\306\eot\274\374\267Z\263\323"
 #"\264\351E\333#\377<|\273\00123`\352d\333\6\3\243\321X\346\211.0"
 #"0\220\227\255\27Y\6\353/\3\307\216"
 #"\35\343\345\227_FY\317\20\n\207\303\231\r\6\3\26{7\250\236;\247\355l"
 #"\326\223d\367\313}vS\337p\32\234@\v\2225j"
 #"\324\300\337\337\237\335\273w;\356\363\273,\250\36\214\37"
) 500
(
 #"\347t1\354}\235\235\273`\345j\330\362\235\326*\220r\fn*\321\32j4"
 #"\32\251n=\326\355\210\30\34A~^\276M_ivv6\243G\217\246F`"
 #"\215\242\211\n\352\226\21\320\r\6C\331"
 #"7y\217\34\251o(~\320\345\264O"
 #"\235\202\205\v\341\371\347\213\6\234U\277"
 #"\\\216\243G\235\6\247\334\334\\>\371"
 #"\344\23&L\230\300\352\325\253\351\330\261"
 #"\243\256\32]\377\307\312w\314\2275Z\317\312\327\327\227j:Gw\273'8\31"
 #"\fe\227\252\320\242\5\237\222\226\257\200"
 #"Q#`\376\373`=\331[\267J\361\177bY\353\3\324rpV\264g{\34"
 #"\314xK\eFn\2752\267\336O\322H\377\360\262R\303\222\235xc\22d\27"
 #"\273X\370\277-\360E,\364}\20\332\26\213\207\226B0\226\321,\1775Mq"
 #"f\v\214\31\17/\217\203\373.\267\315"
 #"\177\276^\213\325\17\365v\236g\315@"
 #"\300\316U\250\36\6\203K\225\21\eIII\272\207E\267n\335\332a\223ZH"
 #"H\bY\27t\214\235w\341\342j\331\262e\34?~\234Y\263fq\372\364i"
 #"\206\17\37\316\202\5\v\34\366\17u\353"
 #"\0027\27\273\330\316\315\205\3713\340\316"
 #";\264\v\217\353JT.\362\363\363\251"
 #"]\273\214\341|`{\303\354e\376\376\376\4\a\a\353\376\36AAAd\226\274"
 #"\232/,\204\216\35\340t:\234<\253"
 #"\265`X\217K\213\363\247k\304\307\307"
 #"\263p\341BV\256\\\211\321hd\304"
 #"\210\21\30\215F\356\273\357>\207\353\371"
 #"\370@}\375E\277\342\267\203\260p1"
 #"\254\213-\352\212\31\3732\254\377\217\355"
 #"r&\223\311a-\261V\315\322\347\222"
 #"*U\252P\267n]\207\377\207\342\352"
 #"\326\255\313\331\263g\355\317\254\243\343"
 #"j\260\270\3577j\235\306m\332\300\300\201\3324\353\0\256"
 #"\20\a\303\342\320F\345E\16\215d\364\350\321t\356\334\231"
) 500
(
 #"\215\e7\362\302\v/\260`\341B|"
 #"\235<`\240\334\307\274\223\340\224\227\227"
 #"\247{{\272\257\346Th\347\340\336\265"
 #"\23\36\354\3\213\26k};\305U\253\246\265g\27\37j\263\177?\324\250\ta"
 #"a\332\347-\233a@\177\3700V\273"
 #"\21\260\274\332\265\203\320\2360\264XU"
 #"e\367n\350\330\5\356\272\263\374\351\227"
 #"\341\226\22\375\310\326js\363fE\363"
 #"\342\23\340\221\177@\314\277\265\253\27w"
 #"\230\370:\244\36\203\215\377\a_}\3"
 #"\271\371\3320\362\265\253\265\371{\367A"
 #"\317\a\264\312\344\220\b\367\344iC]"
 #"]\315\251Y\263f|\374\361\307n)"
 #"\302m\267\335\306\261T\35\315\257:\203"
 #"\323\312\17V\222\234\234\314\364\351\332h"
 #"\223\340\340`\226,Y\302\310\221#Y"
 #"\260`\1\215\313\270\242\255S\333\266V"
 #"\233u9^\326\17\266\337<r\344\310\21nv2\0\241\274Z\266l\3117\337"
 #"|c;\321\307G;\313\337t\37X"
 #"\233\343\254C\344\207:\2565\355\332\265"
 #"\213\5\v\26\260b\305\n\252\\\256\6\306\304\3040|\370p\214F#\35;\352"
 #"\350lsAZ:\374c\0<\322W\273\267)/\17rr!/\267\364\262)"
 #"))W\6\260xJ\323\246M\311\316\316&##C\367\t\270Lw\335\r\375"
 #"\372\333\336\203\271s\27\364}\264\250\213"
 #"\302\216\374\374|\206\17\e\316s\317="
 #"G\347\316\235\1\350\335\2737\205\205\205"
 #"\214\0353\206\371\357\315\307X\326\305\276"
 #"\e8\nN\247O\237\306b\261\320\240"
 #"A\3\235\211\271 \"\"\302v\302\324"
 #"\251J\205\205)U\273\246RU\375\224"
 #"\352\320A\251\36=\224\262\230\265\371\2337)U+P\251\177<V:1\223I"
 #"\251\210\b\245\36~X\251\305\213\225z"
 #"\342\t\245\202\352)\265eK\3212\353\277T*\360z\245\236"
 #"\31\352J1\35\233\375\256R\241\241J-\\\250T\277~J"
) 500
(
 #"u\356\254Tj\212\315\"\203\a\17.w6\245\266\225R\252\260P\251\236\17)"
 #"us\v\245\252\5(\325\364V\245^\233\242\315\373~\223R\265\202\224\32Xz"
 #"\265\253\262#^)?C\351\237\0\243R99\3322q;\224\252\23\254T\237"
 #"~\356\311S)\245\346\274\247T\217\a"
 #"\225\n\16\321\276\343]\35\265\317\31\231"
 #"E\313DFF*\223\311\344\276L\35X\275z\265z\364\321GK\317\370\362\v"
 #"\245z\366T\352\306\e\264}\267eKm_\336\367k\231i\2358qBM\233"
 #"6\315\356\274\364\364t\365\316;\357\350"
 #"*\323\333\263\224\352\320E\333>\365\32"
 #"(\325\275\227R\331\331E\363O\236<"
 #"\251\374\374\374T\316\245\34]\351Y\331"
 #"\333\347\34\371u\337\257*88X\25"
 #"\26\26\332\316\330\275[\251\333oWj"
 #"\374x\245\346\315\327\266Q\377\1J]\274XfZf\213Y\215\35;\326n\231"
 #"\363\362\362\324\253\257\276\252\314\326\363\202"
 #"\233<\25i\177\37\0373\276\364\262\241"
 #"\241\241j\375\372\365.\245?f\314\30"
 #"\365\347\237\177\272\264N\363\346\315\325\216"
 #"\35;\\Z\247L\223&)\365\340\203"
 #"\332\271\252\327\3\332\376z\362\244\303U"
 #"V\257^\255\342\343\343\355\316\333\260a"
 #"\203\372\376\373\357\335S\266bf\316\321"
 #"\216\361\240\206\332>}w'\355\363\205\v\266\313}\365\325W*44Tw\272"
 #"\345\vN\366v\266\222\323\314f\245FD\333O\320bQ\352\350Q-\b\355\332"
 #"\245\324\245K\245\227\271\224\243\324\350\321"
 #"\256\24\323\271\23'\224Z\277^\251\3\a\354~\aO\5'\245\2242[\312\376"
 #"\\P\240T\364\v\345\316\372J\272\371"
 #"\371\366\177\212\263X\224\32>\312=yZ\363-\311RbZE\6\247\223'O"
 #"\252j\325\252\225>i\332\333w\v\v\355Ow\263\222"
 #"\333\250\344\366\211\211\211QC\206\fq9\335\360\360p"
) 500
(
 #"\27\313aVM\2324Q\373\367\357/=3'G;&\327\177Y\352\342\315["
 #"\230L\366\367\357\202\22\377\302\324\324T"
 #"U\253V-u\321Ap\265g\364\350\321\352\334\271s.\2553q\342D\365\317"
 #"\177\376\323\245u\34JI\321\376\a\a"
 #"\17\226\336Q\274\204\275c\336\336\264\247"
 #"\236zJ-Y\262Dw\272\345k\326\263W=,9\355\347\237\265!\221v\327"
 #"\367\321\356\235p\324|\21\37\357\376&"
 #"\267F\215\264\237JP\262\177\247\370\347"
 #"=?A\333\333\334\227\217Q\307\350\335"
 #"\3\277A\323\246\356\311\323\232oIn"
 #"\276\275\305%\365\353\327g\340\300\201\254"
 #"\377r=\203\6\25{4\207\275}\327`\0\203\347\232<\254Jn\243\342\333\307"
 #"l63g\316\34bcc]N\367\245\227^r\261\34F^z\351%\326\254"
 #"Y\303\214\0313lgV\255\n\367\336\353r\31*\222\336G\327\305\304\3040f"
 #"\314\30\335\35\361VQQQ\245oP"
 #"vb\330\260a\364\351\323\207\361\343\307"
 #"\353\e%\352\314\2157j?^\314\3361_rZjj*\2337of\341\302"
 #"\205\272\323\365\354i#?\37\346\315\323"
 #"\356#\272\3299\260l9\364\37\340\336ry\241\274<xo\21D<\351|"
 #"Yw1\233a\326\273\20\371t\305\345Y\31\336z\353-\346\315\233\307\245Jx"
 #"\362\270\253V\254XAhh\350U\335\223r\347\235\256_\304EGG\223\220\220"
 #"\300\321\243G]^\367\257 99\231/\276\370\2021W\361\314\3166m\332\270"
 #"|\317\322\3157\337Ldd$\313\226-s9\277k\331\224)S\2309s&"
 #"5j\324p\276\260\225+\325\267^\275z\251\330\330Xu\360\320A}+\230\315"
 #"J\35Ku%\v[\371\371Z\23\\\59r\344\210\212\215\215U"
 #"aaa\345N+,,L\305\306\306\252\303\207\17\353Z\276\240@\251"
) 500
(
 #"c\307\313\235\255K\314\26\245R\312\361"
 #"\357qUZZ\232\212\215\215U]\272t\251\260f=\253\370\204x5v\354\330"
 #"\n\315\323U\311\311\311\252o\337\276*"
 #"'\307\265\276\246\362JMMU\203\6\rRyyy\25\232\257\247\25\230\315j"
 #"\300\200\1j\337\276}\25\236\357\360\341"
 #"\303Ubbb\205\346\353\255\276\376\372"
 #"k\365\342\213/\272\274\236A)\375ch\267o\337N\276)\237\26\315[\2249"
 #"*\351\257,--\215C\207\16\341\347\347G\227.]\312\225V\\\\\34\246\2"
 #"\23-[\264\244Q%5!z\233?"
 #"\377\374\223}\373\264\27\276\204\206\206\272"
 #"\375q6\316XG\300\271\355\16~7KNN&((\250\354\e9=(="
 #"=\235*U\253\330\35R\375Wu\361\342E\316\236=k\367\206YO3\233\315"
 #"$''\323\274y\363\n\317\333\333\374"
 #"\366\333o\264j\325\312\345\343\335\245\340"
 #"$\204\20BT\204J\354\252\26B\b!\354\223\340$\204\20\302\353Hp\22B"
 #"\b\341u$8\t!\204\360:\22\234\204\20Bx\35\tN\342o\303l6\263"
 #"\312\311\213\332\334\251\240\240\200\275{\367"
 #"\222\236\236\356\361\274RSSm^\r"
 #"\222\237\237\317\251S\247<\236\257\20\236"
 #"\"\301I\374m\274\367\336{\272^\245"
 #"^^&\223\211\25+W\360\350\243\217\362\335w\3371|\370p>\370\340\3\217"
 #"\346\371\360\303\17\23\22\22B\367\356\335"
 #"\271\343\216;h\330\260!)):\336N)\204\227\222\340$\376\26\16\35>\244"
 #"\353U\352\3560w\356\\V}\260\212\257\277\376\232I\223&q\361\342E>\374"
 #"\360C\335\353\347\345\345\351z\273nq"
 #"\276\276\276\324\255[\27\223\311D\217\36"
 #"=H\330\231\340\366WT\bQ\221\274\363Vy!\334\310l\261\360\306"
 #"\2247\210\212\212\342\263\317>\363h"
 #"^\247O\237f\352\324\251\254Z\265\352"
) 500
(
 #"\312\35\361\221\221\221\324\265\276\215Y\a"
 #"\263\331\314\21\353;\224t\252Y\263&[\267nui\35!\274\231\4'q\315"
 #"[\266t)\341\341\341\354\335\273\327\343"
 #"y\255[\267\216\274\274<:u\352\304\341#\207\311\315\315%b\360`\247o "
 #"-\256<\257\225\277\224{\t\177\177\177"
 #"\217\276PN\210\212 \301Ix\235\274\274<\335O\311\256^\275:M\2324)"
 #"s~\352\261T~\371\345\27\226.]Z!\301i\347\316\235\0,Y\262\204\220"
 #"\220\20\22\23\23\211\217\217\347\233o\276"
 #"\361\350\363(M&\23#F\214\270\362\344\365G\36y\204\307\373?.AJ\374"
 #"eIp\22^\347\354\331\263\245_\37"
 #"~\231\341\362;\337\r\6\3\6\203\201"
 #"\220\220\2202\203\223R\212)\257Oa\326\277fy\254\254%eff\2\320\244"
 #"I\23\206\r\e\6\300\240A\203\210\216"
 #"\216f\303\206\r\272\3220\270\372^{"
 #"\340\246\233n\342\225W^\241i\323\246\230\315f\2324iBJJ\n\257\276\372"
 #"\252\313i\t\341\r$8\t\257\323\270qc\267\234T\327\256]\313\3\17<@"
 #"\375\340\372\200\26\254\234Y\276|9'O\236t\272\\xx87\333yI\246"
 #"\365\5s\367\337\177\377\225i\315\2337"
 #"g\332\264i\244\245\245\21\22\22b\263"
 #"\374\211\23'\256\fo\267\6%\223\311\304\236={\230>}\372\225\345\224R4"
 #"l\330\220\310\310H\273\345)\376rB___z\367\356\315\364\351\323\31;v"
 #",\376\376\376N\277\217\20\336F\202\223\270&Y\n-\274\366\332kDFF^"
 #"9\311\307\305\305\221\225\225\305\333o\277"
 #"MXX\30\367\332y\323k\257^\275"
 #"\270\224\353\374\245\204%\203\214U\303\206"
 #"\r\1\250S\247\316\225i~~\332+\211\355\5\247\340\340`\6\f\264"
 #"}\231fnn.III\364\37\320\337fz\265\252\366\337\344\232\234"
) 500
(
 #"\234\314W_}\305\210\21#\250Z\265*\0\201\201\201dgg\223\226\226f7"
 #"\210\n\341\355$8\t\257\223\224\224\304\224)St-\333\272uk\273C\304\r"
 #"\30J\335p\233\220\220\200\277\277?\367"
 #"\335w\337\225 RRy\373\205\356\271\347\36\0rrr\256\274\342\333d2\1"
 #"\330\35\261\347\347\347G\213\346-l\246"
 #"eggS\263f\315R\323\313\262z"
 #"\365j\246N\235J\373\366\355\351\324\251"
 #"\23\0\27.\\\300\307\307\307\245Q\202Bx\23\tN\302\3534k\326\214\217?"
 #"\376\270\\i\370\370\370\320\265kW\233"
 #"i\37~\370!\1\1\1\245\246\273S\337\276}\251Z\265*?\375\364\23\375\372"
 #"\365\3\264\227\34\366\350\321\303c5\230"
 #"\266m\3332n\3348\356\355PT\23LHH`\330\260a\256\275\26[\b/"
 #"\"7\341\212k\336\376\375\373\0310`"
 #"\0\353\326\255\343\324\251S\364\350\321C"
 #"\367\340\4W\325\251S\207u\353\3261"
 #"~\374x\326\254Y\303\250Q\243\210\213"
 #"\213c\361\342\305\36\311\17\240\357\303\17"
 #"\223\222\222\302\263#\237e\325\252U\204"
 #"\205\205\321\240A\3f\314\230\341\261<"
 #"\205\3604y\23\256\270\346\231L&\262"
 #"\263\263\361\365\365\305\307\307\207\202\202\2"
 #"\2\2\2\256\364\317xB\352\261T\266"
 #"m\335F\343\306\215\351\320\241\3\325\252"
 #"\331\357/\262\347\302\205\vL\2300\201"
 #"E\213\26\351^\307l6\223\230\230\310"
 #"\377\376\367?\332\266mK\353\333Z\3130r\361\227&\301I\b/c\266X\330"
 #"\263g7\235:v\252\354\242\bQi$8\t!\204\360:\322\347$\204\20\302"
 #"\353Hp\22B\b\341u$8\t!\204\360:\22\234\204\20Bx\35\tNB"
 #"\b!\274\216\4'!\204\20^G\202\223\20B\b\257#\301I\374-d"
 #"eeQPPP\331\305\20B\350$\17~\25\327\264\315[6\363\371g\237"
) 500
(
 #"\223\237\237\317\376\375\373\31:t(\303"
 #"\206\r\273\362\32\v!\204w\222\340$"
 #"\256Y\247N\237\342\211\201O\260i\323"
 #"&\356\274\363N\342\342\342\350\326\255\e"
 #"\371\371\371\214\e7\256\262\213'\204p"
 #"@\232\365\3045+5%\225\214\214\f"
 #"\326\256]\v\300\355\267\337\16\300\17?"
 #"\374P\231\305\22B\350 5'q\315"
 #"\272\247\375=\374\370\343\217\264i\323\6"
 #"\200\203\a\17\2\20\26\26V\231\305\22"
 #"B\350 \17~\25\327<\245\24G\222\2160\364\231\2414h\320\200\325\253W{"
 #"\364u\31B\210\362\223\232\223\360:\216"
 #"^\323n0\0300\30\fW\376n\335\2725\23'Nt\230\336\312\225+\331\260"
 #"a\3\231\231\231\274\371\346\233\22\230\204"
 #"\370\v\220\232\223\370\333\330\261c\a\335"
 #"\272uc\361\342\305\f\37>\274\262\213"
 #"#\204p@\202\223\370[\271\353\256\273"
 #"HLL\344\344\311\223\324\253W\257\262"
 #"\213#\204(\2034\353\t\257\223\224\224\304\264i\323t-\333\272uk&L\230"
 #"`w\336\2349s\230;w.\333\266m\343\226[n\1   \0\213\305B"
 #"Zz\232\4'!\274\230\324\234\204\327"
 #"QJ\351~\232\203\217\217\17\276\276\366"
 #"\257\261\302\303\303\371\344\223O\330\271s"
 #"'\355\333\267\307Rh\241^\335zT\251R\205\243G\217\22\20\20\340\316b\v"
 #"!\334HjN\302\353\30\f\6\267<\301a\302\204\t$&&\362\363\317?\343"
 #"\347\357\307\364\267\246\223\231\231Ill"
 #"\254\4&!\274\234\324\234\3045\355\354"
 #"\331\263l\335\272\225\335\273w\323\256]"
 #";\272t\355\302\2157\334X\331\305\22B8!\301I\b!\204\327\221\307\27\t"
 #"!\204\360:\22\234\204\20Bx\35\tNB\b!\274\216\4'!\204\20^G"
 #"\202\223\20B\b\257#\301I\b!\204\327\221\340$\204\20"
 #"\302\353Hp\22B\b\341u\376\37\257*\226\34\245BO"
) 13 #"\204\0\0\0\0IEND\256B`\202"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #"#;; naive version"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"dot-product"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"compose"
0 0 24 3 1 #" "
0 0 14 3 10 #"vector-sum"
0 0 24 3 1 #" "
0 0 14 3 4 #"vec*"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 17 #"#;; imporve speed"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"dot-product"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"vec1"
0 0 24 3 1 #" "
0 0 14 3 4 #"vec2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"size"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 1 #" "
0 0 14 3 4 #"vec1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"letrec"
0 0 24 3 3 #" (("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                         (("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 4 #"size"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 4 #"vec1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 4 #"vec2"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 8 #"))))))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; using accumulator "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"dot-product"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"vec1"
0 0 24 3 1 #" "
0 0 14 3 4 #"vec2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"size"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 1 #" "
0 0 14 3 4 #"vec1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"letrec"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          (("
0 0 14 3 4 #"loop"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 3 #"acc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 4 #"size"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 3 #"acc"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 3 #"acc"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 4 #"vec1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 4 #"vec2"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 8 #"))))))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; mutator version"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; ======================================"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 11 68
#";; vector-update! (returns the mutated vector rather than a copy of "
0 0 17 3 9 #"original)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"vector-update!"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"vec"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 11 #"vector-set!"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 3 #"vec"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; list->vector (using vector-set!)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"list->vector"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"ls"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 3 #"vec"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-vector"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"letrec"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          (("
0 0 14 3 7 #"convert"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"ls"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 11 #"vector-set!"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 7 #"convert"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 7 #"convert"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 3 #"vec"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; vector-reverse (functional version)"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; reverse elements in a vector."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"vector-reverse"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"vec"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"letrec"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        (("
0 0 14 3 6 #"switch"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 1 #"j"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #">="
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 1 #"j"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 1 #"v"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 5 #"swapv"
0 0 24 3 2 #" ("
0 0 14 3 10 #"swap-maker"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 4 #"))) "
0 0 17 11 23 #";; we have to create a "
0 0 17 3 9 #"new swapv"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 6 #"switch"
0 0 24 3 2 #" ("
0 0 14 3 5 #"swapv"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 1 #"j"
0 0 24 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 3 #") ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 1 #"j"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 6 #"switch"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; swap-maker (functional version)"
0 0 24 29 1 #"\n"
0 0 17 11 65
#";; returns a procedure that has two indices index1 and index2 as "
0 0 17 3 14 #"parameters and"
0 0 24 29 1 #"\n"
0 0 17 11 72
(
 #";; returns a copy of vec that has its elements with indices, index1 "
 #"and "
) 0 0 17 3 7 #"index2,"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; interchanged."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"swap-maker"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"vec"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 6 #"index1"
0 0 24 3 1 #" "
0 0 14 3 6 #"index2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"temp"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 1 #" "
0 0 14 3 6 #"index1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 13 #"vector-update"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-update"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 1 #" "
0 0 14 3 6 #"index1"
0 0 24 3 1 #" "
0 0 14 3 6 #"index2"
0 0 24 3 2 #") "
0 0 14 3 6 #"index2"
0 0 24 11 1 #" "
0 0 14 3 4 #"temp"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; vector-reverse! (imperative version)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"vector-reverse"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"vec"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 6 #"swapv!"
0 0 24 3 2 #" ("
0 0 14 3 10 #"swap-maker"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 4 #"))) "
0 0 17 11 35 #";; no need to recreate swapv using "
0 0 17 3 7 #"mutator"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"letrec"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          (("
0 0 14 3 6 #"switch"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 1 #"j"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 1 #"j"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 6 #"swapv!"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 1 #"j"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 6 #"switch"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 3 #") ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 1 #"j"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 6 #"switch"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 3 #"vec"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9        1603 21           0 0           0 266 0 14 3 4 #"When"
0 0 24 3 1 #" "
0 0 14 3 8 #"mutation"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 10 #"introduced"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 2 #"we"
0 0 24 3 1 #" "
0 0 14 3 4 #"must"
0 0 24 3 1 #" "
0 0 14 3 5 #"adopt"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 9 #"different"
0 0 24 3 1 #" "
0 0 14 3 5 #"point"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 4 #"view"
0 0 24 3 1 #" "
0 0 14 3 5 #"about"
0 0 24 29 1 #"\n"
0 0 14 3 9 #"computing"
0 0 24 3 1 #" "
0 0 14 3 4 #"than"
0 0 24 3 1 #" "
0 0 15 3 4 #"when"
0 0 24 3 1 #" "
0 0 14 3 2 #"we"
0 0 24 3 1 #" "
0 0 14 3 3 #"use"
0 0 24 3 1 #" "
0 0 14 3 10 #"functional"
0 0 24 3 1 #" "
0 0 14 3 12 #"programming."
0 0 24 3 1 #" "
0 0 14 3 8 #"Programs"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 4 #"make"
0 0 24 3 1 #" "
0 0 14 3 3 #"use"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 29 1 #"\n"
0 0 14 3 8 #"mutation"
0 0 24 3 1 #" "
0 0 14 3 3 #"are"
0 0 24 3 1 #" "
0 0 14 3 8 #"referred"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 2 #"as"
0 0 24 3 1 #" "
0 0 14 3 16 #"imperative-style"
0 0 24 3 1 #" "
0 0 14 3 9 #"programs."
0 0 24 3 1 #" "
0 0 14 3 2 #"In"
0 0 24 3 1 #" "
0 0 14 3 10 #"functional"
0 0 24 29 1 #"\n"
0 0 14 3 11 #"programming"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 2 #"an"
0 0 24 3 1 #" "
0 0 14 3 6 #"object"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 6 #"passed"
0 0 24 3 1 #" "
0 0 14 3 2 #"as"
0 0 24 3 1 #" "
0 0 14 3 2 #"an"
0 0 24 3 1 #" "
0 0 14 3 8 #"argument"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 9 #"procedure"
0 0 24 3 1 #" "
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 3 #"new"
0 0 24 29 1 #"\n"
0 0 14 3 6 #"object"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 7 #"created"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 3 #"but"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 8 #"original"
0 0 24 3 1 #" "
0 0 14 3 3 #"one"
0 0 24 3 1 #" "
0 0 14 3 4 #"does"
0 0 24 3 1 #" "
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 14 3 7 #"change."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 14 3 4 #"What"
0 0 24 3 1 #" "
0 0 14 3 5 #"makes"
0 0 24 3 1 #" "
0 0 14 3 8 #"mutation"
0 0 24 3 1 #" "
0 0 14 3 6 #"really"
0 0 24 3 1 #" "
0 0 14 3 9 #"important"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 7 #"however"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 3 #"has"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 15 3 2 #"do"
0 0 24 3 1 #" "
0 0 14 3 4 #"with"
0 0 24 3 1 #" "
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 14 3 6 #"access"
0 0 24 29 1 #"\n"
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 3 #"way"
0 0 24 3 1 #" "
0 0 14 3 9 #"virtually"
0 0 24 3 1 #" "
0 0 14 3 3 #"all"
0 0 24 3 1 #" "
0 0 14 3 9 #"computers"
0 0 24 3 1 #" "
0 0 14 3 3 #"are"
0 0 24 3 1 #" "
0 0 14 3 9 #"designed."
0 0 24 3 1 #" "
0 0 14 3 6 #"Random"
0 0 24 3 1 #" "
0 0 14 3 6 #"access"
0 0 24 3 1 #" "
0 0 14 3 8 #"provides"
0 0 24 29 1 #"\n"
0 0 14 3 8 #"constant"
0 0 24 3 1 #" "
0 0 14 3 5 #"time."
0 0 24 3 1 #" "
0 0 14 3 4 #"That"
0 0 24 3 1 #" "
0 0 14 3 2 #"is"
0 0 28 3 1 #","
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 4 #"time"
0 0 24 3 1 #" "
0 0 14 3 8 #"required"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 6 #"access"
0 0 24 3 1 #" "
0 0 14 3 3 #"any"
0 0 24 3 1 #" "
0 0 14 3 7 #"element"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 6 #"vector"
0 0 24 29 1 #"\n"
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 5 #"same."
0 0 24 3 1 #" "
0 0 14 3 10 #"Sequential"
0 0 24 3 1 #" "
0 0 14 3 6 #"access"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 1 #" "
0 0 14 3 5 #"lists"
0 0 24 3 1 #" "
0 0 14 3 8 #"provides"
0 0 24 3 1 #" "
0 0 14 3 6 #"linear"
0 0 24 3 1 #" "
0 0 14 3 4 #"time"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 1 #" "
0 0 14 3 5 #"which"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 4 #"time"
0 0 24 29 1 #"\n"
0 0 14 3 2 #"is"
0 0 24 3 1 #" "
0 0 14 3 12 #"proportional"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 5 #"index"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 8 #"element."
0 0 24 3 1 #" "
0 0 14 3 4 #"Thus"
0 0 24 3 1 #" "
0 0 14 3 2 #"we"
0 0 24 3 1 #" "
0 0 14 3 3 #"see"
0 0 24 3 1 #" "
0 0 14 3 4 #"that"
0 0 24 3 1 #" "
0 0 14 3 5 #"using"
0 0 24 3 1 #" "
0 0 14 3 8 #"mutation"
0 0 24 29 1 #"\n"
0 0 14 3 12 #"considerably"
0 0 24 3 1 #" "
0 0 14 3 8 #"improves"
0 0 24 3 1 #" "
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 7 #"running"
0 0 24 3 1 #" "
0 0 14 3 4 #"time"
0 0 24 3 1 #" "
0 0 14 3 2 #"of"
0 0 24 3 1 #" "
0 0 14 3 9 #"programs."
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Exercises"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; 1. successive-powers"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; Define"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 1 #" "
0 0 17 3 17 #"successive-powers"
0 0 17 3 1 #" "
0 0 17 3 4 #"that"
0 0 17 3 1 #" "
0 0 17 3 10 #"constructs"
0 0 17 11 13 #" a vector of "
0 0 17 3 8 #"length n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";; whose"
0 0 17 3 1 #" "
0 0 17 3 7 #"entries"
0 0 17 3 1 #" "
0 0 17 3 3 #"are"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 10 #"successive"
0 0 17 3 1 #" "
0 0 17 3 6 #"powers"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 11 17 #"number base. The "
0 0 17 3 12 #"element with"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";; index"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 3 #"0th"
0 0 17 3 1 #" "
0 0 17 3 6 #"power "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 5 #"base."
0 0 17 3 1 #" "
0 0 17 3 3 #"The"
0 0 17 3 1 #" "
0 0 17 3 10 #"procedure "
0 0 17 3 6 #"should"
0 0 17 3 1 #" "
0 0 17 11 14 #"be curried so "
0 0 17 3 8 #"that its"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";; first"
0 0 17 3 1 #" "
0 0 17 3 9 #"parameter"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 4 #"base"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 1 #" "
0 0 17 3 4 #"that"
0 0 17 11 17 #" is returned has "
0 0 17 3 12 #"parameter n."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; check https://en.wikipedia.org/wiki/Exponentiation for terms."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"successive-powers"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"base"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"size"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 16 #"vector-generator"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 8 #"exponent"
0 0 24 3 3 #") ("
0 0 14 3 4 #"expt"
0 0 24 3 1 #" "
0 0 14 3 4 #"base"
0 0 24 3 1 #" "
0 0 14 3 8 #"exponent"
0 0 24 11 4 #"))) "
0 0 14 3 4 #"size"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; Test your procedure on"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 24 3 3 #" (("
0 0 14 3 17 #"successive-powers"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 1 #"8"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 2 #"#("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"16"
0 0 24 3 1 #" "
0 0 21 3 2 #"32"
0 0 24 3 1 #" "
0 0 21 3 2 #"64"
0 0 24 3 1 #" "
0 0 21 3 3 #"128"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 24 3 3 #" (("
0 0 14 3 17 #"successive-powers"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 2 #"#("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"27"
0 0 24 3 1 #" "
0 0 21 3 2 #"81"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; 2a. vector-view"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";; We "
0 0 17 3 7 #"defined"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 1 #" "
0 0 17 3 4 #"view"
0 0 17 3 1 #" "
0 0 17 3 4 #"when"
0 0 17 3 1 #" "
0 0 17 3 2 #"we"
0 0 17 3 1 #" "
0 0 17 3 4 #"used"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 10 #"procedural"
0 0 17 11 1 #" "
0 0 17 3 14 #"representation"
0 0 17 3 1 #" "
0 0 17 3 4 #"of a"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; vector to "
0 0 17 3 7 #"display"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 6 #"vector"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 8 #"notation"
0 0 17 3 1 #" "
0 0 17 3 5 #"using"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 5 #"sharp"
0 0 17 3 1 #" "
0 0 17 3 4 #"sign"
0 0 17 11 1 #" "
0 0 17 3 11 #"followed by"
0 0 24 29 1 #"\n"
0 0 17 3 5 #";; a "
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 9 #"elements."
0 0 17 3 1 #" "
0 0 17 3 6 #"Define"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 9 #"procedure"
0 0 17 3 1 #" "
0 0 17 3 11 #"vector-view"
0 0 17 3 1 #" "
0 0 17 3 4 #"that"
0 0 17 3 1 #" "
0 0 17 3 5 #"works"
0 0 17 3 1 #" "
0 0 17 3 4 #"like"
0 0 17 11 1 #" "
0 0 17 3 5 #"view,"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; except"
0 0 17 3 1 #" "
0 0 17 3 4 #"that"
0 0 17 3 1 #" "
0 0 17 3 2 #"it"
0 0 17 3 1 #" "
0 0 17 3 8 #"displays"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 6 #"vector"
0 0 17 3 1 #" "
0 0 17 3 5 #"using"
0 0 17 3 1 #" "
0 0 17 3 5 #"angle"
0 0 17 3 1 #" "
0 0 17 3 7 #"bracket"
0 0 17 3 1 #" "
0 0 17 3 8 #"notation"
0 0 17 3 1 #" "
0 0 17 3 4 #"with"
0 0 17 11 1 #" "
0 0 17 3 6 #"commas"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";; as "
0 0 17 3 4 #"used"
0 0 17 3 1 #" "
0 0 17 3 15 #"in mathematics."
0 0 24 29 1 #"\n"
0 0 17 3 8 #";; With "
0 0 17 3 3 #"all"
0 0 17 3 1 #" "
0 0 17 3 5 #"three"
0 0 17 3 1 #" "
0 0 17 3 15 #"representations"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 7 #"vectors"
0 0 17 3 1 #" "
0 0 17 3 5 #"given"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 5 #" this"
0 0 17 3 9 #" chapter,"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; (vector-view"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 6 #"vector"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 1 #" "
0 0 17 3 2 #"30"
0 0 17 3 3 #")) "
0 0 17 3 6 #"should"
0 0 17 3 1 #" "
0 0 17 3 7 #"display"
0 0 17 3 1 #" "
0 0 17 3 3 #"<10"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 2 #"20"
0 0 17 3 6 #", 30>."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"vector-view"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"vec"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 13 #"highest-index"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 13 #"highest-index"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"<>\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"newline"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"letrec"
0 0 24 3 3 #" (("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 7 #"display"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 13 #"highest-index"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 4 #"\", \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"<\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 3 #"\">\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"newline"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"vector-view"
0 0 24 3 2 #" ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; 2b. set-view"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";; A"
0 0 17 3 1 #" "
0 0 17 3 7 #"similar"
0 0 17 3 1 #" "
0 0 17 3 7 #"program"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 8 #"set-view"
0 0 17 3 1 #" "
0 0 17 3 3 #"can"
0 0 17 3 1 #" "
0 0 17 3 2 #"be"
0 0 17 3 1 #" "
0 0 17 3 7 #"defined"
0 0 17 3 1 #" "
0 0 17 3 5 #"using"
0 0 17 3 1 #" "
0 0 17 3 6 #"braces"
0 0 17 3 1 #" "
0 0 17 3 7 #"instead"
0 0 17 3 1 #" "
0 0 17 11 3 #"of "
0 0 17 3 5 #"angle"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; brackets."
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"set-view"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; 3. test"
0 0 24 29 1 #"\n"
0 9         565 21           0 0           0 93 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"v1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"vector"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"v2"
0 0 24 3 2 #" ("
0 0 14 3 11 #"vector-copy"
0 0 24 3 1 #" "
0 0 14 3 2 #"v1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 2 #"v1"
0 0 24 3 1 #" "
0 0 14 3 2 #"v2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 2 #"v1"
0 0 24 3 1 #" "
0 0 14 3 2 #"v1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 21 3 2 #"#t"
0 0 24 29 1 #"\n"
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eqv?"
0 0 24 3 1 #" "
0 0 14 3 2 #"v1"
0 0 24 3 1 #" "
0 0 14 3 2 #"v1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 21 3 2 #"#t"
0 0 24 29 1 #"\n"
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eqv?"
0 0 24 3 1 #" "
0 0 14 3 2 #"v1"
0 0 24 3 1 #" "
0 0 14 3 2 #"v2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"v1"
0 0 24 3 1 #" "
0 0 14 3 2 #"v2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 21 3 2 #"#t"
0 0 24 29 1 #"\n"
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 2 #"v1"
0 0 24 3 1 #" "
0 0 14 3 2 #"v1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 21 3 2 #"#t"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; 4. vector-linear-search"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";; The"
0 0 17 3 1 #" "
0 0 17 3 7 #"vectors"
0 0 17 3 1 #" "
0 0 17 3 5 #"under"
0 0 17 3 1 #" "
0 0 17 3 13 #"consideration"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 4 #"this"
0 0 17 3 1 #" "
0 0 17 3 8 #"exercise"
0 0 17 3 1 #" "
0 0 17 3 7 #"contain"
0 0 17 3 1 #" "
0 0 17 3 8 #"elements"
0 0 17 11 1 #" "
0 0 17 3 4 #"that"
0 0 17 3 7 #" can be"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; tested"
0 0 17 3 1 #" "
0 0 17 3 3 #"for"
0 0 17 3 1 #" "
0 0 17 3 8 #"sameness"
0 0 17 3 1 #" "
0 0 17 3 4 #"with"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 9 #"predicate"
0 0 17 3 1 #" "
0 0 17 3 7 #"equal?."
0 0 17 3 1 #" "
0 0 17 3 6 #"Define"
0 0 17 3 12 #" a procedure"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; vector-linear-search"
0 0 17 3 1 #" "
0 0 17 3 4 #"that"
0 0 17 3 1 #" "
0 0 17 3 3 #"has"
0 0 17 3 1 #" "
0 0 17 3 2 #"as"
0 0 17 3 1 #" "
0 0 17 3 3 #"its"
0 0 17 3 1 #" "
0 0 17 3 10 #"parameters"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 6 #"vector"
0 0 17 3 1 #" "
0 0 17 3 3 #"vec"
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 2 #"an"
0 0 17 11 1 #" "
0 0 17 3 6 #"object"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";; obj."
0 0 17 3 1 #" "
0 0 17 3 2 #"It"
0 0 17 3 1 #" "
0 0 17 3 7 #"returns"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 8 #"smallest"
0 0 17 3 1 #" "
0 0 17 3 5 #"index"
0 0 17 3 1 #" "
0 0 17 3 5 #"whose"
0 0 17 3 1 #" "
0 0 17 3 7 #"element"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"same"
0 0 17 3 1 #" "
0 0 17 3 2 #"as"
0 0 17 3 1 #" "
0 0 17 3 4 #"obj."
0 0 17 11 1 #" "
0 0 17 3 6 #"If the"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; object is"
0 0 17 3 1 #" "
0 0 17 3 3 #"not"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 6 #"vector"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 2 #"an"
0 0 17 3 1 #" "
0 0 17 3 11 #"appropriate"
0 0 17 3 1 #" "
0 0 17 3 7 #"message"
0 0 17 3 1 #" "
0 0 17 3 12 #"is returned."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 20 #"vector-linear-search"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"vec"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 4 #"size"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"letrec"
0 0 24 3 3 #" (("
0 0 14 3 4 #"loop"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 4 #"size"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 19 3 11 #"\"not found\""
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 14 3 3 #"obj"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 14 3 1 #"i"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";; Test"
0 0 17 3 1 #" "
0 0 17 3 16 #"your program on:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 20 #"vector-linear-search"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"#("
0 0 14 3 1 #"g"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 20 #"vector-linear-search"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"#("
0 0 21 3 2 #"29"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 21 3 2 #"96"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 3 #"-15"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 2 #"11"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; 5. vector-append, vector-reverse"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";; Use vector-generator to define vector analogs of append and rever"
 #"se."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"vector-append"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"vec1"
0 0 24 3 1 #" "
0 0 14 3 4 #"vec2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 9 #"size-vec1"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 1 #" "
0 0 14 3 4 #"vec1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 9 #"size-vec2"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 1 #" "
0 0 14 3 4 #"vec2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 16 #"vector-generator"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 9 #"size-vec1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 4 #"vec1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 4 #"vec2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 9 #"size-vec1"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 9 #"size-vec1"
0 0 24 3 1 #" "
0 0 14 3 9 #"size-vec2"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-append"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"#("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 2 #"#("
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 2 #"#("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"vector-reverse"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"vec"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 13 #"highest-index"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 16 #"vector-generator"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 13 #"highest-index"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 13 #"highest-index"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"vector-reverse"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"#("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 2 #"#("
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0           0
